version: 0.2
env:
  exported-variables:
    - ECR_REGION
    - ECR_REPO_NAME
    - ACCOUNT_NUMBER
    - CONTAINER_NAME
    - ENV
    - CLUSTER_NAME
    - SERVICE_NAME
    - TASK_DEFINITION
    - SUBNET_1
    - SUBNET_2
    - SECURITY_GROUP
    - DOCKERHUB_PASSWORD
phases:
  install:
    runtime-versions:

      docker: 18
    commands:
      - apt-get update
      - apt install jq
      - echo "${DOCKERHUB_PASSWORD}" | docker login -u onegunsamurai --password-stdin
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - $(aws ecr get-login --region ${ECR_REGION} --no-include-email)
      - REPOSITORY_URI=${ECR_REPO_NAME}
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      # - apt-get update && apt-get install -y gnupg software-properties-common curl
      # - curl -fsSL https://apt.releases.hashicorp.com/gpg | apt-key add -
      # - apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
      # - apt-get update && apt-get install terraform
      # - wget -q https://github.com/gruntwork-io/terragrunt/releases/download/v0.35.12/terragrunt_linux_amd64
      # - chmod u+x terragrunt_linux_amd64 && mv terragrunt_linux_amd64 /usr/local/bin/terragrunt
      - echo Build started on `date`
      - echo Building the Docker image...
      - cd app          
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - cd ..
      # - cd ${CODEBUILD_SRC_DIR}/environments
      # - export TAG="${CODEBUILD_RESOLVED_SOURCE_VERSION}"
      # - terragrunt run-all init
      # - cd ${ENV}/ecs
      # - terragrunt plan -var="image_tag=${TAG}"
      # - terragrunt apply -var="image_tag=${TAG}" -auto-approve
  post_build:
    commands:
      - echo Build completed on `date`
      - printf '[{"name”:"${CONTAINER_NAME},"imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - aws ecs describe-task-definition --task-definition web_servers | \jq '.taskDefinition' > taskdef.json
      - envsubst < appspec_template.yaml > appspec.yaml

artifacts:
  files:
    - appspec.yaml
    - taskdef.json